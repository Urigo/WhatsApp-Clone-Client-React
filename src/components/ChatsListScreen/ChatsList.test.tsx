import React from 'react';
import ReactDOM from 'react-dom';
import { cleanup, render, waitForDomChange } from 'react-testing-library';
import ChatsList from './ChatsList';

describe('ChatsList', () => {
  afterEach(cleanup);

  it('renders fetched chats data', async () => {
    fetch.mockResponseOnce(JSON.stringify({
      data: {
        chats: [
          {
            id: 1,
            name: 'Foo Bar',
            picture: 'https://localhost:4000/picture.jpg',
            lastMessage: {
              id: 1,
              content: 'Hello',
              createdAt: new Date(0),
            },
          },
        ],
      },
    }));

    {
      const { container, getByTestId } = render(<ChatsList />);

      await waitForDomChange({ container });

      expect(getByTestId('name')).toHaveTextContent('Foo Bar');
      expect(getByTestId('picture')).toHaveAttribute('src', 'https://localhost:4000/picture.jpg');
      expect(getByTestId('content')).toHaveTextContent('Hello');
      expect(getByTestId('date')).toHaveTextContent('01:00');
    }
  });
});

// IMPORTANT
// Below is a temporary hack to suppress warnings generated by a React bug.
// Source: https://github.com/testing-library/react-testing-library/issues/281
// @todo: remove this when React 16.9.0 is stable and we upgrade.
const originalError = console.error;
beforeAll(() => {
  console.error = (...args: string[]) => {
    if (/Warning.*not wrapped in act/.test(args[0])) {
      return;
    }
    originalError.call(console, ...args);
  };
});

afterAll(() => {
  console.error = originalError;
});
